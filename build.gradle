plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.16'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.github.node-gradle.node' version "2.2.2"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '1.8'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.ws:spring-ws-core:4.0.5'
	implementation 'mysql:mysql-connector-java:8.0.33'
	implementation 'org.projectlombok:lombok:1.18.28'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	annotationProcessor 'org.projectlombok:lombok:1.18.28'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('appNpmInstall', NpmTask) {
	description = 'Installs all dependencies from package.json'
	workingDir = file("${project.projectDir}/src/main/webapp")
	args = ['install']
}

tasks.register('appNpmBuild', NpmTask) {
	dependsOn 'appNpmInstall'
	description = 'Builds project'
	workingDir = file("${project.projectDir}/src/main/webapp")
	args = ['run', 'build']
}

tasks.register('copyWebApp', Copy) {
	dependsOn 'appNpmBuild'
	description = 'Copies built project to where it will be served'
	from 'src/main/webapp/build'
	into 'build/resources/main/static/.'
}

node {
	download = true
	version = '12.13.1'
	npmVersion = '6.12.1'
	workDir = file("${project.buildDir}/nodejs")
	npmWorkDir = file("${project.buildDir}/npm")
}

